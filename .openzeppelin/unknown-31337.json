{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9d4454B023096f34B160D6B654540c56A1F81688",
    "txHash": "0x49771607c06db01a3e933e296d696b0852d2388cd9deb1ca1f6ab37883d2ac0d",
    "deployTransaction": {
      "hash": "0x49771607c06db01a3e933e296d696b0852d2388cd9deb1ca1f6ab37883d2ac0d",
      "type": 2,
      "accessList": [],
      "blockHash": "0xb027f50a43e1236440c48a38d45d1e72e7a6a6cad5ee19398e443f8af974a3ce",
      "blockNumber": 11602280,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x28ffeee27e"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x1f6ea39340"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x2b8a86e38a"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 45,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x0e981130bc3c0f29d2e5484b79e7a43cabdb0cba6bfdb42e71037af68e43bb44",
      "s": "0x757c320c2f0f0506cef0baa0c7b81d3483a6fb396eba45639e8872e774898e73",
      "v": 0,
      "creates": "0x9d4454B023096f34B160D6B654540c56A1F81688",
      "chainId": 31337
    }
  },
  "proxies": [
    {
      "address": "0xCD8a1C3ba11CF5ECfa6267617243239504a98d90",
      "txHash": "0x5c4ebca84d94fcdef44a581d093447931d5161b7e529e361c60395a70fd2ab07",
      "kind": "transparent"
    },
    {
      "address": "0x7969c5eD335650692Bc04293B07F5BF2e7A673C0",
      "txHash": "0xee3609a6f47398f518b8949f3e2ba337284f0002ed80a440f499b933d021412b",
      "kind": "transparent"
    },
    {
      "address": "0x1429859428C0aBc9C2C47C8Ee9FBaf82cFA0F20f",
      "txHash": "0x8f4823d3dd07accc1e5bc0d19a26601c62b7987cfe743914e0a0105016d34d80",
      "kind": "transparent"
    },
    {
      "address": "0x162A433068F51e18b7d13932F27e66a3f99E6890",
      "txHash": "0x6c1553e5899632375bf8cece9f2b8d3e53af25f3a0d0992a73453a0ff718f550",
      "kind": "transparent"
    },
    {
      "address": "0x1fA02b2d6A771842690194Cf62D91bdd92BfE28d",
      "txHash": "0x138f42cb90efc72013ea6cadd11b2727ab0a3989fde40e3581222ae8f09e3b69",
      "kind": "transparent"
    },
    {
      "address": "0x36b58F5C1969B7b6591D752ea6F5486D069010AB",
      "txHash": "0x6a453aefe7190f0f4360ef40bd43461fd2ba9079de3958ac573810979186932b",
      "kind": "transparent"
    },
    {
      "address": "0xBEc49fA140aCaA83533fB00A2BB19bDdd0290f25",
      "txHash": "0x7672d49d70efe80c2f71ffaaa328b0b629a09cb2e4625d09b6a08e3090ed5f95",
      "kind": "transparent"
    },
    {
      "address": "0x2B0d36FACD61B71CC05ab8F3D2355ec3631C0dd5",
      "txHash": "0x1e74693ce182630c0a23ccaf2a94dbd9cb3fac814f71b9a367b12cac4f8d5e1d",
      "kind": "transparent"
    },
    {
      "address": "0xC9a43158891282A2B1475592D5719c001986Aaec",
      "txHash": "0xfbae28ebac44a15b62869736086348e552d2535ea12557db93c0de095fa58575",
      "kind": "transparent"
    },
    {
      "address": "0x367761085BF3C12e5DA2Df99AC6E1a824612b8fb",
      "txHash": "0xc7cfa18683cc98a2e0d045a4248941fd17f2f52b5fdc35c2abfbe706028e16cb",
      "kind": "transparent"
    },
    {
      "address": "0x49fd2BE640DB2910c2fAb69bB8531Ab6E76127ff",
      "txHash": "0xee9948c55d569c685f90cbf221e217233ab2b57828189719ece60a4c1dd43c2c",
      "kind": "transparent"
    },
    {
      "address": "0x86A2EE8FAf9A840F7a2c64CA3d51209F9A02081D",
      "txHash": "0x505dc4a76fc3524df278c70a1d2e533addd49c61a66b2d22b5dc6629e93aaa4d",
      "kind": "transparent"
    },
    {
      "address": "0x4b6aB5F819A515382B0dEB6935D793817bB4af28",
      "txHash": "0x420c4b2ae131622b446474a7fdb13312879d78a5e5fd15cdc52843fde6b46676",
      "kind": "transparent"
    },
    {
      "address": "0xF8e31cb472bc70500f08Cd84917E5A1912Ec8397",
      "txHash": "0x33758fab3e7bee55212e5692f93903f57f83447d7401d34ed52f5d1416585335",
      "kind": "transparent"
    },
    {
      "address": "0xA7c59f010700930003b33aB25a7a0679C860f29c",
      "txHash": "0x9ae95e4d2e21da806c1a102aa13cd17c8902e67dd1c21479abf7f691f687758e",
      "kind": "transparent"
    },
    {
      "address": "0x276C216D241856199A83bf27b2286659e5b877D3",
      "txHash": "0xdaae72dac5b42c506fb247bd54756f6a1e297cd5a7c2f768a3c9e64c5abd7c39",
      "kind": "transparent"
    },
    {
      "address": "0x5bf5b11053e734690269C6B9D438F8C9d48F528A",
      "txHash": "0xbcd0fc15fecdd1233e76598fd24ae45c74b9dc8caa068136835f8a8d16154b61",
      "kind": "transparent"
    },
    {
      "address": "0x3aAde2dCD2Df6a8cAc689EE797591b2913658659",
      "txHash": "0xb0308d8d07137593fc032745019b8ba549c06b5fe0072074e0a0f1c94cfbe522",
      "kind": "transparent"
    },
    {
      "address": "0x1f10F3Ba7ACB61b2F50B9d6DdCf91a6f787C0E82",
      "txHash": "0x37496e849deac3864986dcab33aa2440433cdd4540d155d26eb50c4239d21958",
      "kind": "transparent"
    },
    {
      "address": "0x525C7063E7C20997BaaE9bDa922159152D0e8417",
      "txHash": "0x73dd29a5e493a6d50cebf26df484275b96ae0524b69a513b8a21d73b1e410455",
      "kind": "transparent"
    },
    {
      "address": "0xB82008565FdC7e44609fA118A4a681E92581e680",
      "txHash": "0x242acab169f6c71b2a673262ac08b9f5c9137adbb22b91fce23c95d895a92815",
      "kind": "transparent"
    },
    {
      "address": "0x8A93d247134d91e0de6f96547cB0204e5BE8e5D8",
      "txHash": "0x3d43b11875574da69491784049c6bbbcb32a9b301ed4416508417a9fa8bb98ee",
      "kind": "transparent"
    },
    {
      "address": "0xd6e1afe5cA8D00A2EFC01B89997abE2De47fdfAf",
      "txHash": "0xd20a458b73a00f3f9858c20522ac8d138390eb7c03d56812837e527122094967",
      "kind": "transparent"
    },
    {
      "address": "0xCA8c8688914e0F7096c920146cd0Ad85cD7Ae8b9",
      "txHash": "0xfd79010c20fa92772c3ed4ff4cbc4c9a4380f82e119dfecff537686419128b2e",
      "kind": "transparent"
    },
    {
      "address": "0x927b167526bAbB9be047421db732C663a0b77B11",
      "txHash": "0x4c11ba9718547df32bb7febae491bdec2fc4039c8b1e9e01c403b930a87bec3a",
      "kind": "transparent"
    },
    {
      "address": "0x01c1DeF3b91672704716159C9041Aeca392DdFfb",
      "txHash": "0x3d6dd1a8c795767d98e1d3b8684aa5789f3065b72970fd0910dfe35fcdb2077f",
      "kind": "transparent"
    },
    {
      "address": "0x6C2d83262fF84cBaDb3e416D527403135D757892",
      "txHash": "0xf89afaaac4ccc2f4fd937aa4e01526f7acd1a03b6966dcc936a41a562a1481b2",
      "kind": "transparent"
    },
    {
      "address": "0xa6e99A4ED7498b3cdDCBB61a6A607a4925Faa1B7",
      "txHash": "0x0f2ea0d839256360f3d4d03513774be27e0423df494f59482c1e2c8f48449894",
      "kind": "transparent"
    },
    {
      "address": "0x4bf010f1b9beDA5450a8dD702ED602A104ff65EE",
      "txHash": "0xf421b3bbb1025e390d31242f1ea7bc7fb9c8627b4c188c6415284cf63268f60f",
      "kind": "transparent"
    },
    {
      "address": "0x96F3Ce39Ad2BfDCf92C0F6E2C2CAbF83874660Fc",
      "txHash": "0x73f40236f5e51b7736f9680b3859d25ed7fe75d819b2e8b34661351e3e0b1f89",
      "kind": "transparent"
    },
    {
      "address": "0xefc1aB2475ACb7E60499Efb171D173be19928a05",
      "txHash": "0xbcbe00f2b6672ca745495056404a46eddd12abb219086add319be35f079d63db",
      "kind": "transparent"
    },
    {
      "address": "0xe1Fd27F4390DcBE165f4D60DBF821e4B9Bb02dEd",
      "txHash": "0xfe0a78e4de19482e57ca152ed6cff93d7048fbd311360d9b2348ae7b3a213e5d",
      "kind": "transparent"
    },
    {
      "address": "0xB377a2EeD7566Ac9fCb0BA673604F9BF875e2Bab",
      "txHash": "0x8b00c45e50495dc643e770b77de6efe2588e018d57044c4835cb7b3c5c7231c6",
      "kind": "transparent"
    },
    {
      "address": "0x74Cf9087AD26D541930BaC724B7ab21bA8F00a27",
      "txHash": "0xed0019a96445ad2dd9b64f864c4952189a40d715006f7be29de37ce8f4570b87",
      "kind": "transparent"
    },
    {
      "address": "0xddE78e6202518FF4936b5302cC2891ec180E8bFf",
      "txHash": "0x2688ffa95bbed018a88c0dc7a73819b8ad9f97e148f05489c79d57eb1d553aed",
      "kind": "transparent"
    },
    {
      "address": "0xaB7B4c595d3cE8C85e16DA86630f2fc223B05057",
      "txHash": "0xe86071193100375f199e8ac27a7205aa462dbcb3dc1b595975744c5a4a09c9fe",
      "kind": "transparent"
    },
    {
      "address": "0x2b5A4e5493d4a54E717057B127cf0C000C876f9B",
      "txHash": "0xd04bece08204067cc0226c32f00477a30228b76c54a77659da25ffc07293c36f",
      "kind": "transparent"
    },
    {
      "address": "0x821f3361D454cc98b7555221A06Be563a7E2E0A6",
      "txHash": "0xb20592c014aa552107c1e85218dee646f3c097c0cfc86c6b8ba9d9ce1bed04ac",
      "kind": "transparent"
    },
    {
      "address": "0x71089Ba41e478702e1904692385Be3972B2cBf9e",
      "txHash": "0xb6ffd44213725f535b5fa0b9ecf1d3c5786b1a7eac2a446e03a4848d2e9c6d24",
      "kind": "transparent"
    },
    {
      "address": "0xC66AB83418C20A65C3f8e83B3d11c8C3a6097b6F",
      "txHash": "0x1fe8c6fc23ec2cf10be0a652c6159cdb85eeed28cfa93213baa70638d112fba4",
      "kind": "transparent"
    },
    {
      "address": "0xdFdE6B33f13de2CA1A75A6F7169f50541B14f75b",
      "txHash": "0x064250fa02491ee730a9b0d89a611b26b5cd1b0d8a96929806b6a525106bb208",
      "kind": "transparent"
    },
    {
      "address": "0x54B8d8E2455946f2A5B8982283f2359812e815ce",
      "txHash": "0xd0a8effeff965f88510a83c5be8182453d93678f4798e62663d6c5d8acc3c0f8",
      "kind": "transparent"
    },
    {
      "address": "0x56D13Eb21a625EdA8438F55DF2C31dC3632034f5",
      "txHash": "0x39ffd0d769d02b1a14d9bbcd6a3b19b29811b0ee82e1bbee47b35e93f5870118",
      "kind": "transparent"
    },
    {
      "address": "0x3904b8f5b0F49cD206b7d5AABeE5D1F37eE15D8d",
      "txHash": "0xc5a01ec1ccaf5819b0d6244d3cfd810f804415eec3debd89070cdfad64f36a0f",
      "kind": "transparent"
    },
    {
      "address": "0x56fC17a65ccFEC6B7ad0aDe9BD9416CB365B9BE8",
      "txHash": "0x0cbb95d234b12f3d6c1c22bdc2c18dece408a13a716cb290edcb15b2f04b8d98",
      "kind": "transparent"
    },
    {
      "address": "0x7B4f352Cd40114f12e82fC675b5BA8C7582FC513",
      "txHash": "0xe9848dbf46c6db9588464534df86131418a5390ecfc7f6d992179c57f2e69849",
      "kind": "transparent"
    },
    {
      "address": "0x87006e75a5B6bE9D1bbF61AC8Cd84f05D9140589",
      "txHash": "0x94e1b904265b3ef600ca2d70a8938b0d1d0af6a5b77bf6adf5d9453d996bcbaa",
      "kind": "transparent"
    },
    {
      "address": "0x8fC8CFB7f7362E44E472c690A6e025B80E406458",
      "txHash": "0xffeaec5da68c7ad120c02117f511456ec11044161671200440715c673e82f283",
      "kind": "transparent"
    },
    {
      "address": "0xc9952Fc93Fa9bE383ccB39008c786b9f94eAc95d",
      "txHash": "0xf31253e52082873dab751a7a6cd7332b08fc31c40cf89f6a7bcce55623396ffd",
      "kind": "transparent"
    },
    {
      "address": "0x70eE76691Bdd9696552AF8d4fd634b3cF79DD529",
      "txHash": "0x68647a3f2afe3a5b4407049c1c69c6d97b5a2d32d0f776aedc0acfac82729877",
      "kind": "transparent"
    },
    {
      "address": "0x162700d1613DfEC978032A909DE02643bC55df1A",
      "txHash": "0x4f83173a4b5db9300e7c81fc774281b4cf3689b0a79ead56b14e624103f340a1",
      "kind": "transparent"
    },
    {
      "address": "0xcC4c41415fc68B2fBf70102742A83cDe435e0Ca7",
      "txHash": "0x9fe7c75fab083b4577c3f38c232423c1935be9376ff1bdb7deded0644b464a4d",
      "kind": "transparent"
    },
    {
      "address": "0x967AB65ef14c58bD4DcfFeaAA1ADb40a022140E5",
      "txHash": "0xfd0da62b5871b1fbc6408e034b2837ac0bf0ed33e8bee7c8147440c4c2728678",
      "kind": "transparent"
    },
    {
      "address": "0x871ACbEabBaf8Bed65c22ba7132beCFaBf8c27B5",
      "txHash": "0xacbb33b3d5626dabc320d5d03fefb9d4e689f2b4bc3850e84c619062cb8cd67d",
      "kind": "transparent"
    },
    {
      "address": "0x193521C8934bCF3473453AF4321911E7A89E0E12",
      "txHash": "0x66fc9105cf75840442b06d0397920fdf39716987033950cb689a8265569baa75",
      "kind": "transparent"
    },
    {
      "address": "0x3C1Cb427D20F15563aDa8C249E71db76d7183B6c",
      "txHash": "0xe7aff4ae32ef4fd4d1229a0045dfc8a0f9943b2bb7faf92921d010842178cef3",
      "kind": "transparent"
    },
    {
      "address": "0x7C8BaafA542c57fF9B2B90612bf8aB9E86e22C09",
      "txHash": "0x09bf998e3dc04af29d6d89f778900925335a4bef5e85635ecef2f3c0f21da00a",
      "kind": "transparent"
    },
    {
      "address": "0xd3FFD73C53F139cEBB80b6A524bE280955b3f4db",
      "txHash": "0xddec285ac861919e8e7434a693463a91c7e6a4495e43375530cc078a949759f7",
      "kind": "transparent"
    },
    {
      "address": "0x4826533B4897376654Bb4d4AD88B7faFD0C98528",
      "txHash": "0xcfb30601ca0ed6ea3a83ce69b3b5481ff5f657e9f33389a9a822b4c588befde5",
      "kind": "transparent"
    },
    {
      "address": "0x8f86403A4DE0BB5791fa46B8e795C547942fE4Cf",
      "txHash": "0x274943974e81f4f51220955e711046ab5d980ac8bb6cc7ab776397aa1c1b82eb",
      "kind": "transparent"
    },
    {
      "address": "0xb7278A61aa25c888815aFC32Ad3cC52fF24fE575",
      "txHash": "0x514dcf85682f1c1ff8a1e3c97cf3fe5ac73f940f8ba57475e85486405045bb58",
      "kind": "transparent"
    },
    {
      "address": "0x922D6956C99E12DFeB3224DEA977D0939758A1Fe",
      "txHash": "0x6bb6f75c2a51b89d1a7e27d6f5d663ec226e105fca7e5dde9eb9806731ccd788",
      "kind": "transparent"
    },
    {
      "address": "0x04C89607413713Ec9775E14b954286519d836FEf",
      "txHash": "0xe8a290a8b4bf0bf86b1c1940ae62a9703c5a9bc870d60a0a180bf5fc3023ed2d",
      "kind": "transparent"
    },
    {
      "address": "0xD8a5a9b31c3C0232E196d518E89Fd8bF83AcAd43",
      "txHash": "0x1b7330406572bbea9f8cc8bf2997cd051803950debdc38488c9fcaa048a0411a",
      "kind": "transparent"
    },
    {
      "address": "0x95401dc811bb5740090279Ba06cfA8fcF6113778",
      "txHash": "0xd5e783f349a562ca774509e0ea9f41ea8f6b304099d7118603879cef346a6f21",
      "kind": "transparent"
    },
    {
      "address": "0x5eb3Bc0a489C5A8288765d2336659EbCA68FCd00",
      "txHash": "0x74e09c0104bdcbeb26a58b5ad402482ebe6fd7d4b7ca6a0da3ae24a075871496",
      "kind": "transparent"
    },
    {
      "address": "0x809d550fca64d94Bd9F66E60752A544199cfAC3D",
      "txHash": "0x9fd1108c00b3f28665c357c88d399c585fdc8bc913a4ebe0bea2a0f8b81eac9d",
      "kind": "transparent"
    },
    {
      "address": "0x1291Be112d480055DaFd8a610b7d1e203891C274",
      "txHash": "0xbc37ab3b4a39bf080ae98c257ced4eb0e8644537d62f6e60c1cfc35d36cdc8cc",
      "kind": "transparent"
    },
    {
      "address": "0x5f3f1dBD7B74C6B46e8c44f98792A1dAf8d69154",
      "txHash": "0x025dae805753a0f1c3d585165d3ed5e2eeaf82025863b70686147eb4c291df9c",
      "kind": "transparent"
    },
    {
      "address": "0x82e01223d51Eb87e16A03E24687EDF0F294da6f1",
      "txHash": "0xf4cdc38da0192096f1d465eefaebc791d5210199a19fab24f431f70d1dfb1e72",
      "kind": "transparent"
    },
    {
      "address": "0x2bdCC0de6bE1f7D2ee689a0342D76F52E8EFABa3",
      "txHash": "0x996c5c139bf709fbf5b38e5445a610f24c70a83ad144323c40404f09c19b8bc5",
      "kind": "transparent"
    },
    {
      "address": "0x7bc06c482DEAd17c0e297aFbC32f6e63d3846650",
      "txHash": "0x3e85f115e36d72d876e1b3ed0082deb1248baf4928c19fbc322eab56f48b08fb",
      "kind": "transparent"
    },
    {
      "address": "0xc351628EB244ec633d5f21fBD6621e1a683B1181",
      "txHash": "0x3ca274725cd60e3722b3f3cf6a7be9dec5eee3e5cbe80471c3dba0623d5345b2",
      "kind": "transparent"
    },
    {
      "address": "0xcbEAF3BDe82155F56486Fb5a1072cb8baAf547cc",
      "txHash": "0xea1482988d96475103c72ace99ac2c092c3c907606f4225912a0eb5f505e0931",
      "kind": "transparent"
    },
    {
      "address": "0x4C4a2f8c81640e47606d3fd77B353E87Ba015584",
      "txHash": "0xa2bba55a5465aac4cce296efffd4dfef10d51d8150a337118df66a9f04d99e96",
      "kind": "transparent"
    },
    {
      "address": "0xAA292E8611aDF267e563f334Ee42320aC96D0463",
      "txHash": "0x5d89be31a965e4913e2e95b51e6276f06761336782cc6c65391bc2e469cfd33b",
      "kind": "transparent"
    },
    {
      "address": "0x5c74c94173F05dA1720953407cbb920F3DF9f887",
      "txHash": "0x835ab2645c865724c69d4ef870b4b93bc49445271a8bec94876fa959ea0ff000",
      "kind": "transparent"
    },
    {
      "address": "0xe8D2A1E88c91DCd5433208d4152Cc4F399a7e91d",
      "txHash": "0xe2767d3d0d5339f3a1d9100724be1bc3b3f0f27cf4b5c93da3ab7651eaca1db1",
      "kind": "transparent"
    },
    {
      "address": "0xD0141E899a65C95a556fE2B27e5982A6DE7fDD7A",
      "txHash": "0x2fa69c6df52cd5715fbf849e1d3270f2987d03a96d25ab7908ac26bfda83489d",
      "kind": "transparent"
    },
    {
      "address": "0x045857BDEAE7C1c7252d611eB24eB55564198b4C",
      "txHash": "0xfc05133d37afee67ba18947e44d2008befa527ca895d7a4e9a504ef83783b14f",
      "kind": "transparent"
    },
    {
      "address": "0x12Bcb546bC60fF39F1Adfc7cE4605d5Bd6a6A876",
      "txHash": "0xb78adb86db398b8f69445283543366f6239b38b1cf8351eeb689186c713c3301",
      "kind": "transparent"
    },
    {
      "address": "0xaC47e91215fb80462139756f43438402998E4A3a",
      "txHash": "0x2372b7a79aaada640cc57e0ff7192600c15b35e55858571cc6a019cdb90f50bf",
      "kind": "transparent"
    },
    {
      "address": "0x9BcC604D4381C5b0Ad12Ff3Bf32bEdE063416BC7",
      "txHash": "0xb78a8a87b95bc62a46d3091e5dfe7da327d039fdf951b524e1b1a96ccd6b2084",
      "kind": "transparent"
    },
    {
      "address": "0xe039608E695D21aB11675EBBA00261A0e750526c",
      "txHash": "0x1d2301eda47cb700018f946a6895d8f74c188db1749059a7bd8a7be18f79841f",
      "kind": "transparent"
    },
    {
      "address": "0xD6b040736e948621c5b6E0a494473c47a6113eA8",
      "txHash": "0x14b4578ec0be994cc8be0c078fbe62eea14c1457f041e080b5d8acf0499dd3ab",
      "kind": "transparent"
    },
    {
      "address": "0x1c9fD50dF7a4f066884b58A05D91e4b55005876A",
      "txHash": "0xbbfb1621f4638629ba83cf1c1cf665a01d9ffd9cc646eb57b4c8083accee39f2",
      "kind": "transparent"
    },
    {
      "address": "0x0fe4223AD99dF788A6Dcad148eB4086E6389cEB6",
      "txHash": "0x0c90ecde5cd1a9133118f7cc3fad6b1297bc6a5ceb47507cc0bf9f449fd36376",
      "kind": "transparent"
    },
    {
      "address": "0xb185E9f6531BA9877741022C92CE858cDCc5760E",
      "txHash": "0xbda58c54f959ca21524884f6b0e698e247595299c2de7c812288c5a98dd352f2",
      "kind": "transparent"
    },
    {
      "address": "0x5e6CB7E728E1C320855587E1D9C6F7972ebdD6D5",
      "txHash": "0xa44b07a8f20642d4a750be077fa8cea729987990829893a041f1e08607e08b24",
      "kind": "transparent"
    },
    {
      "address": "0x79E8AB29Ff79805025c9462a2f2F12e9A496f81d",
      "txHash": "0x7b3adc906f87388b2d380a53d5c27d7248ebda7d7f9e2d66ac4bfb93a2b63b26",
      "kind": "transparent"
    },
    {
      "address": "0x0Dd99d9f56A14E9D53b2DdC62D9f0bAbe806647A",
      "txHash": "0x3124e9c9f451105e8c46fe90120104393e9fe2dc16d57ae053ebfdc402939822",
      "kind": "transparent"
    },
    {
      "address": "0xb932C8342106776E73E39D695F3FFC3A9624eCE0",
      "txHash": "0x35fa023efe77cc5fa32b59e4c2078bd3b3da89bb75020fa7537aaaa36ff762e5",
      "kind": "transparent"
    },
    {
      "address": "0x94fFA1C7330845646CE9128450F8e6c3B5e44F86",
      "txHash": "0x351b43dfd4ce482a8c26c9e0d054af6517dc92c671086d1d20e8fe303bf481c8",
      "kind": "transparent"
    }
  ],
  "impls": {
    "561ef64b8baf5bacd71ccd004a2f5e19e87cc940b0329b976b9ca3b42731cc2a": {
      "address": "0x998abeb3E57409262aE5b751f60747921B33613E",
      "txHash": "0xccd428438bbd19dbdc0a518460c55877d76d203651c5a352d8818cebec798bce",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "PublicPresale",
            "label": "xmead",
            "type": "t_contract(XMead)6045",
            "src": "contracts/Presales/PublicPresale.sol:17"
          },
          {
            "contract": "PublicPresale",
            "label": "usdc",
            "type": "t_contract(ERC20Upgradeable)869",
            "src": "contracts/Presales/PublicPresale.sol:20"
          },
          {
            "contract": "PublicPresale",
            "label": "deposited",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Presales/PublicPresale.sol:23"
          },
          {
            "contract": "PublicPresale",
            "label": "cooldown",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Presales/PublicPresale.sol:26"
          },
          {
            "contract": "PublicPresale",
            "label": "participants",
            "type": "t_uint256",
            "src": "contracts/Presales/PublicPresale.sol:29"
          },
          {
            "contract": "PublicPresale",
            "label": "isRunning",
            "type": "t_bool",
            "src": "contracts/Presales/PublicPresale.sol:32"
          },
          {
            "contract": "PublicPresale",
            "label": "raiseAim",
            "type": "t_uint256",
            "src": "contracts/Presales/PublicPresale.sol:35"
          },
          {
            "contract": "PublicPresale",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts/Presales/PublicPresale.sol:38"
          },
          {
            "contract": "PublicPresale",
            "label": "tokenRate",
            "type": "t_uint256",
            "src": "contracts/Presales/PublicPresale.sol:41"
          },
          {
            "contract": "PublicPresale",
            "label": "min",
            "type": "t_uint256",
            "src": "contracts/Presales/PublicPresale.sol:44"
          },
          {
            "contract": "PublicPresale",
            "label": "maxContributions",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/Presales/PublicPresale.sol:47"
          },
          {
            "contract": "PublicPresale",
            "label": "timeInterval",
            "type": "t_uint256",
            "src": "contracts/Presales/PublicPresale.sol:50"
          },
          {
            "contract": "PublicPresale",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts/Presales/PublicPresale.sol:53"
          }
        ],
        "types": {
          "t_contract(XMead)6045": {
            "label": "contract XMead"
          },
          "t_contract(ERC20Upgradeable)869": {
            "label": "contract ERC20Upgradeable"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7dfd5ff852478328e91164f79f559c08344b78da703e8d466ac8d3fe2119764a": {
      "address": "0x851356ae760d987E095750cCeb3bC6014560891C",
      "txHash": "0x024e0801210e1465c01d06a3a94352423e54510d9ac010b84754fcf9f56172a4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "WhitelistPresale",
            "label": "xmead",
            "type": "t_contract(XMead)6045",
            "src": "contracts\\Presales\\WhitelistPresale.sol:17"
          },
          {
            "contract": "WhitelistPresale",
            "label": "usdc",
            "type": "t_contract(ERC20Upgradeable)869",
            "src": "contracts\\Presales\\WhitelistPresale.sol:20"
          },
          {
            "contract": "WhitelistPresale",
            "label": "deposited",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\Presales\\WhitelistPresale.sol:23"
          },
          {
            "contract": "WhitelistPresale",
            "label": "participants",
            "type": "t_uint256",
            "src": "contracts\\Presales\\WhitelistPresale.sol:26"
          },
          {
            "contract": "WhitelistPresale",
            "label": "whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\Presales\\WhitelistPresale.sol:29"
          },
          {
            "contract": "WhitelistPresale",
            "label": "isRunning",
            "type": "t_bool",
            "src": "contracts\\Presales\\WhitelistPresale.sol:35"
          },
          {
            "contract": "WhitelistPresale",
            "label": "raiseAim",
            "type": "t_uint256",
            "src": "contracts\\Presales\\WhitelistPresale.sol:38"
          },
          {
            "contract": "WhitelistPresale",
            "label": "totalDeposited",
            "type": "t_uint256",
            "src": "contracts\\Presales\\WhitelistPresale.sol:41"
          },
          {
            "contract": "WhitelistPresale",
            "label": "tokenRate",
            "type": "t_uint256",
            "src": "contracts\\Presales\\WhitelistPresale.sol:44"
          },
          {
            "contract": "WhitelistPresale",
            "label": "min",
            "type": "t_uint256",
            "src": "contracts\\Presales\\WhitelistPresale.sol:47"
          },
          {
            "contract": "WhitelistPresale",
            "label": "maxContributions",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\Presales\\WhitelistPresale.sol:50"
          },
          {
            "contract": "WhitelistPresale",
            "label": "timeInterval",
            "type": "t_uint256",
            "src": "contracts\\Presales\\WhitelistPresale.sol:53"
          },
          {
            "contract": "WhitelistPresale",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\Presales\\WhitelistPresale.sol:56"
          }
        ],
        "types": {
          "t_contract(XMead)6045": {
            "label": "contract XMead"
          },
          "t_contract(ERC20Upgradeable)869": {
            "label": "contract ERC20Upgradeable"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8d41dea154c35e9aa1438e6b3ee662f9fd12bffac0791a6e574f51190643fe2c": {
      "address": "0x8f86403A4DE0BB5791fa46B8e795C547942fE4Cf",
      "txHash": "0xff29779344571826147f52cb5016fd57acee0b68753ec8f19e422c97640cf447",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Mead",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\ERC-20\\Mead.sol:21"
          },
          {
            "contract": "Mead",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\ERC-20\\Mead.sol:24"
          },
          {
            "contract": "Mead",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts\\ERC-20\\Mead.sol:27"
          },
          {
            "contract": "Mead",
            "label": "dexRouter",
            "type": "t_contract(IJoeRouter02)5120",
            "src": "contracts\\ERC-20\\Mead.sol:30"
          },
          {
            "contract": "Mead",
            "label": "liquidityPair",
            "type": "t_address",
            "src": "contracts\\ERC-20\\Mead.sol:33"
          },
          {
            "contract": "Mead",
            "label": "tavernsKeep",
            "type": "t_address",
            "src": "contracts\\ERC-20\\Mead.sol:36"
          },
          {
            "contract": "Mead",
            "label": "isTradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-20\\Mead.sol:39"
          },
          {
            "contract": "Mead",
            "label": "buyTax",
            "type": "t_uint256",
            "src": "contracts\\ERC-20\\Mead.sol:42"
          },
          {
            "contract": "Mead",
            "label": "sellTax",
            "type": "t_uint256",
            "src": "contracts\\ERC-20\\Mead.sol:45"
          },
          {
            "contract": "Mead",
            "label": "blacklist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ERC-20\\Mead.sol:48"
          },
          {
            "contract": "Mead",
            "label": "whitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ERC-20\\Mead.sol:51"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_contract(IJoeRouter02)5120": {
            "label": "contract IJoeRouter02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e55c59cfb8293931d6e12551ed1e885e50981137b985518dfdf9af4591689d20": {
      "address": "0x36C02dA8a0983159322a80FFE9F24b1acfF8B570",
      "txHash": "0x999696d0ece1e6237704f8dfe9bf82585838f647bbeff0f9dac89b513208c648",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ClassManager",
            "label": "classThresholds",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ClassManager.sol:24"
          },
          {
            "contract": "ClassManager",
            "label": "brewers",
            "type": "t_mapping(t_address,t_struct(Brewer)6231_storage)",
            "src": "contracts\\ClassManager.sol:27"
          }
        ],
        "types": {
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Brewer)6231_storage)": {
            "label": "mapping(address => struct ClassManager.Brewer)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Brewer)6231_storage": {
            "label": "struct ClassManager.Brewer",
            "members": [
              {
                "label": "class",
                "type": "t_uint32"
              },
              {
                "label": "reputation",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e44de1622383d82330f1a4dd1b78ccc77d3419184481b0a19d6bf884344ced60": {
      "address": "0xb7278A61aa25c888815aFC32Ad3cC52fF24fE575",
      "txHash": "0xf111a8c66f4188cfc17ac6d7fe4f8a9b1247af46a6277b5c3ff295e45f491f1b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "TavernSettings",
            "label": "xmead",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:17"
          },
          {
            "contract": "TavernSettings",
            "label": "mead",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:20"
          },
          {
            "contract": "TavernSettings",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:23"
          },
          {
            "contract": "TavernSettings",
            "label": "redeemer",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:26"
          },
          {
            "contract": "TavernSettings",
            "label": "classManager",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:29"
          },
          {
            "contract": "TavernSettings",
            "label": "dexRouter",
            "type": "t_contract(IJoeRouter02)5120",
            "src": "contracts\\TavernSettings.sol:32"
          },
          {
            "contract": "TavernSettings",
            "label": "liquidityPair",
            "type": "t_contract(IJoePair)4724",
            "src": "contracts\\TavernSettings.sol:35"
          },
          {
            "contract": "TavernSettings",
            "label": "tavernsKeep",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:38"
          },
          {
            "contract": "TavernSettings",
            "label": "rewardsPool",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:41"
          },
          {
            "contract": "TavernSettings",
            "label": "treasuryFee",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:44"
          },
          {
            "contract": "TavernSettings",
            "label": "rewardPoolFee",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:47"
          },
          {
            "contract": "TavernSettings",
            "label": "txLimit",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:50"
          },
          {
            "contract": "TavernSettings",
            "label": "walletLimit",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:53"
          },
          {
            "contract": "TavernSettings",
            "label": "breweryCost",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:56"
          },
          {
            "contract": "TavernSettings",
            "label": "xMeadCost",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:59"
          },
          {
            "contract": "TavernSettings",
            "label": "renovationAddress",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:62"
          },
          {
            "contract": "TavernSettings",
            "label": "classTaxes",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\TavernSettings.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IJoeRouter02)5120": {
            "label": "contract IJoeRouter02"
          },
          "t_contract(IJoePair)4724": {
            "label": "contract IJoePair"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "bc971ca44f8b310393a9797ecab97a3a44ec91f4d80d835f8164a85eec9c2613": {
      "address": "0xFD471836031dc5108809D173A067e8486B9047A3",
      "txHash": "0xed614bb951a0079f147e20241c6f31b159e133951a5679cea3e936b56b17dccd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "TavernSettings",
            "label": "xmead",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:16"
          },
          {
            "contract": "TavernSettings",
            "label": "mead",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:19"
          },
          {
            "contract": "TavernSettings",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:22"
          },
          {
            "contract": "TavernSettings",
            "label": "redeemer",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:25"
          },
          {
            "contract": "TavernSettings",
            "label": "classManager",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:28"
          },
          {
            "contract": "TavernSettings",
            "label": "dexRouter",
            "type": "t_contract(IJoeRouter02)5120",
            "src": "contracts\\TavernSettings.sol:31"
          },
          {
            "contract": "TavernSettings",
            "label": "liquidityPair",
            "type": "t_contract(IJoePair)4724",
            "src": "contracts\\TavernSettings.sol:34"
          },
          {
            "contract": "TavernSettings",
            "label": "tavernsKeep",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:37"
          },
          {
            "contract": "TavernSettings",
            "label": "rewardsPool",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:40"
          },
          {
            "contract": "TavernSettings",
            "label": "treasuryFee",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:43"
          },
          {
            "contract": "TavernSettings",
            "label": "rewardPoolFee",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:46"
          },
          {
            "contract": "TavernSettings",
            "label": "txLimit",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:49"
          },
          {
            "contract": "TavernSettings",
            "label": "walletLimit",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:52"
          },
          {
            "contract": "TavernSettings",
            "label": "breweryCost",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:55"
          },
          {
            "contract": "TavernSettings",
            "label": "xMeadCost",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:58"
          },
          {
            "contract": "TavernSettings",
            "label": "renovationAddress",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:61"
          },
          {
            "contract": "TavernSettings",
            "label": "classTaxes",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\TavernSettings.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IJoeRouter02)5120": {
            "label": "contract IJoeRouter02"
          },
          "t_contract(IJoePair)4724": {
            "label": "contract IJoePair"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "08eeb432a1b742bafd2ed4cc82fe25072ec47c32061f7f1f3f5511c5dee28dc6": {
      "address": "0x04C89607413713Ec9775E14b954286519d836FEf",
      "txHash": "0x67c7c5f4b9983390190ef147aeaf50dec66c73d07740d2defa3109119f992bc4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:31"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:33"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10279",
            "src": "contracts\\ERC-721\\Brewery.sol:36"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:39"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:42"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7692_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:58"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:62"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:67"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:70"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:73"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:76"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:79"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:82"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:85"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10279": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7692_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7692_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ea322c9c25e571d53126fb1942588085a57579a4a5ca10eae15d2a81945ea052": {
      "address": "0x4EE6eCAD1c2Dae9f525404De8555724e3c35d07B",
      "txHash": "0xb0194998e67a8dddd56ebcbe20094688cbcb4a8944c27f5a393570171066f065",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:31"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:33"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10156",
            "src": "contracts\\ERC-721\\Brewery.sol:36"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:39"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:42"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7692_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:58"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:62"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:67"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:70"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:73"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:76"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:79"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:82"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:85"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10156": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7692_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7692_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d65e8857fe27cb5c97f200e209019923f61c8f90fc9dc363ba9f04e2fc013fdf": {
      "address": "0x367761085BF3C12e5DA2Df99AC6E1a824612b8fb",
      "txHash": "0x054677f2c31d535f2742f884dc662c2395b8e489c4697701925b0c115c3e022b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:31"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:33"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10158",
            "src": "contracts\\ERC-721\\Brewery.sol:36"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:39"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:42"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7692_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:58"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:62"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:67"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:70"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:73"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:76"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:79"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:82"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:85"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10158": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7692_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7692_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fa43a477154c448f34b25469d87ccde572ee12296aafcddf1a607616b2353b57": {
      "address": "0x720472c8ce72c2A2D711333e064ABD3E6BbEAdd3",
      "txHash": "0x41352f358236dcc835336c4c7b7d090af66225c69f1732ac5e32889979f07559",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "TavernSettings",
            "label": "xmead",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:16"
          },
          {
            "contract": "TavernSettings",
            "label": "mead",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:19"
          },
          {
            "contract": "TavernSettings",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:22"
          },
          {
            "contract": "TavernSettings",
            "label": "redeemer",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:25"
          },
          {
            "contract": "TavernSettings",
            "label": "classManager",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:28"
          },
          {
            "contract": "TavernSettings",
            "label": "dexRouter",
            "type": "t_contract(IJoeRouter02)5120",
            "src": "contracts\\TavernSettings.sol:31"
          },
          {
            "contract": "TavernSettings",
            "label": "liquidityPair",
            "type": "t_contract(IJoePair)4724",
            "src": "contracts\\TavernSettings.sol:34"
          },
          {
            "contract": "TavernSettings",
            "label": "tavernsKeep",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:37"
          },
          {
            "contract": "TavernSettings",
            "label": "rewardsPool",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:40"
          },
          {
            "contract": "TavernSettings",
            "label": "treasuryFee",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:43"
          },
          {
            "contract": "TavernSettings",
            "label": "rewardPoolFee",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:46"
          },
          {
            "contract": "TavernSettings",
            "label": "txLimit",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:49"
          },
          {
            "contract": "TavernSettings",
            "label": "walletLimit",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:52"
          },
          {
            "contract": "TavernSettings",
            "label": "breweryCost",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:55"
          },
          {
            "contract": "TavernSettings",
            "label": "xMeadCost",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:58"
          },
          {
            "contract": "TavernSettings",
            "label": "renovationAddress",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:61"
          },
          {
            "contract": "TavernSettings",
            "label": "classTaxes",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\TavernSettings.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IJoeRouter02)5120": {
            "label": "contract IJoeRouter02"
          },
          "t_contract(IJoePair)4724": {
            "label": "contract IJoePair"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0a06949395d31fee6d87da135e090623ef4906ed2ca686c4e9e125ecd1ed8426": {
      "address": "0x34B40BA116d5Dec75548a9e9A8f15411461E8c70",
      "txHash": "0xc6cc7b104c79530f0a80dcb46bf7a9d99f982b437f87d0025e30d94f9b4d1d42",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:31"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:33"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10295",
            "src": "contracts\\ERC-721\\Brewery.sol:36"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:39"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:42"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7692_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:58"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:62"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:67"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:70"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:73"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:76"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:79"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:82"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:85"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10295": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7692_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7692_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7e160e781c24ed793fdea522915d6c81555d7f56173aa81893091e6c2c1e9bcb": {
      "address": "0xffa7CA1AEEEbBc30C874d32C7e22F052BbEa0429",
      "txHash": "0x2b3c8aad6a2a7718c48a1fdfb0606e8e306dbd5d06b03dc293623805b5d44221",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10317",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10317": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d1f441b91d00231ef746872633560ccd2ed205afc83572f2feba2d0be69de242": {
      "address": "0xab16A69A5a8c12C732e0DEFF4BE56A70bb64c926",
      "txHash": "0x69b707494ec8bc7f6fb19465fc7c03c2933223048d220c1ff2b61d2460b6f806",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10323",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10323": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fffd9fb7373db04d02e2b8f8d6631e793b621b6d92180cf66fc63b4648a1d224": {
      "address": "0x1f10F3Ba7ACB61b2F50B9d6DdCf91a6f787C0E82",
      "txHash": "0x60e10c47fa890837d8e32ddb12f07d02f31ddd537e8005bef60c3a9bbdb2b79b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10231",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10231": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1e063c953140b6553449766c7bb1d60110cd941466534db1e11e446a81163dbb": {
      "address": "0x525C7063E7C20997BaaE9bDa922159152D0e8417",
      "txHash": "0x833f7ea9f7aefee1f53b1d1a95f888ddcccc73c0a95d6c768676c361a13c3258",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10328",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10328": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7b90b99c14fdf93ddbe20d8c7173ce8686de4ac2848bd74dc62432d33864a580": {
      "address": "0x5fc748f1FEb28d7b76fa1c6B07D8ba2d5535177c",
      "txHash": "0x247a295f4e2118a3b9ecfbc3702548fdfe8fad657e9087be7bd30757978b44db",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10267",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10267": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b19214cc1bfdd72d1d47fa70a74ee374346667e535b70188bd47ec6dbf64a2a9": {
      "address": "0x2a810409872AfC346F9B5b26571Fd6eC42EA4849",
      "txHash": "0x34ee772825fb1bf7fb38c69b4d7898eb63ce8fdd4bd20d6a16517b2f1a4f0d9e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10147",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10147": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ddf634f608639b153dadcc72fe296b09160b89c98574f36c73cd503f201c9465": {
      "address": "0xF32D39ff9f6Aa7a7A64d7a4F00a54826Ef791a55",
      "txHash": "0x03344aa7bfc55cea7b3b54012a49bf87a31aff7809a529d657cecaf37a4cc0c2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10160",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10160": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c8a3ceb2b3350953b6c0e7d731cb75b15d22ae0af8861934e75ab8a153e89c2f": {
      "address": "0x6F6f570F45833E249e27022648a26F4076F48f78",
      "txHash": "0xbd8094d4cb10c013fc39c33ce4788f2c5c33b81ee6b989cdf02b0f153219e8f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10162",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10162": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b973fa089ed25ffc8bddbf8e2194da1d97aec9c1e70255d3ca67c8cd45bb802d": {
      "address": "0x5FeaeBfB4439F3516c74939A9D04e95AFE82C4ae",
      "txHash": "0x3c1c57dcf5b5f4d947f9c023e84b9dfa2e19a50cfc9c4534d69c3f770393c8e1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10225",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10225": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d6407e9648293b669a2c0924ff17a7168b4e5764bd525a47cffa2d57507e052a": {
      "address": "0x19cEcCd6942ad38562Ee10bAfd44776ceB67e923",
      "txHash": "0x3370645bfde5a4b326f3db863c22503ae7fe50e9e203910268202ca5fbe1177c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10297",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10297": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "af1eae7768f41702ac927ebc863247a649c3836ce150777e2cc5dd876c876f11": {
      "address": "0xfcDB4564c18A9134002b9771816092C9693622e3",
      "txHash": "0x5a21a3a76b539383195fae219bc7b9895df15e88dd8c676026f92e49e3802b93",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10225",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10225": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d56badbb1dbb6ed9157dae10239657e7f55b811928333c2af1acebde9a8aa2d6": {
      "address": "0x6C2d83262fF84cBaDb3e416D527403135D757892",
      "txHash": "0x60e07c94b79e19ac81e81348db6cc8f5c59400d8c7bcf9bbf109c0bd4b59c9a1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10241",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10241": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a3706d978cecd042181fa4113ca5543cd9a6c7c893890741c14ac971dfe6fc1f": {
      "address": "0x5302E909d1e93e30F05B5D6Eea766363D14F9892",
      "txHash": "0x745207cd476aa983765b4dba419d9a7ed02d7b3e9e1c547271ab48108e2b8477",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10237",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10237": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4aa322861819830e6cce7611f8268030cdb171dafb7f53c31a30d6f162be0a9e": {
      "address": "0x870526b7973b56163a6997bB7C886F5E4EA53638",
      "txHash": "0x7dc45ba03cf01eb54d3f308add80c8e1b5df37a39090b0d0af886bdf6fb75d27",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10223",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10223": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d33937e57bf785fdcc4f42f8fbeb1d39fea779258c8abc89fefbcf83d2a93e24": {
      "address": "0xe1Fd27F4390DcBE165f4D60DBF821e4B9Bb02dEd",
      "txHash": "0x2af6ef680cc0aa62c700b0e75409f4dd673563fee89c1dfb1d0ad7809c2e4e88",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10225",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10225": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5800a2c64728bbb9c8bff83a9708138a7c0d13568b6aaf90c1372cdb338b415a": {
      "address": "0xB2b580ce436E6F77A5713D80887e14788Ef49c9A",
      "txHash": "0x5c2dca2ff4a9c6a1946077e18eebbdc03f79bd372432249c6f0fbfd8c27d0431",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10229",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10229": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b85599a2e0ce9d91aebdc4686ebd070940aeea1aa16ff7eca85a302130f3a930": {
      "address": "0x66F625B8c4c635af8b74ECe2d7eD0D58b4af3C3d",
      "txHash": "0x9e3dbc5268e2445ed72092a5f9accdbbe75e0d6bcf7cb08b2e31763b341e31c9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10253",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10253": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2463e7188ff4fea5baf4af90c37312908c1231b4d18ede46854b390502c51522": {
      "address": "0x74Cf9087AD26D541930BaC724B7ab21bA8F00a27",
      "txHash": "0x4274923ad1bf07bb72051e1dec412ec6fddf1377e537116dd4da752787fdd8ec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10253",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10253": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b0fa37ee027889d5bd501163517d1609b40151d1b03fd2225441c4c1edac0472": {
      "address": "0xaca81583840B1bf2dDF6CDe824ada250C1936B4D",
      "txHash": "0x7ae82cb581a959ef944e4519ef3448ed8973ebeafb6e7b1ecb51b4b3847ce440",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10235",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10235": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "47f8725fccdb1334a924c773db0eac18f7961e367f61767e971f174beeccff4d": {
      "address": "0xA56F946D6398Dd7d9D4D9B337Cf9E0F68982ca5B",
      "txHash": "0x24605571a62d8d715466d6ed76f80b8394b6846325c73e86d7a58111b52bc304",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10264",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "baseProductionRatePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "baseFermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "baseExperiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:86"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10264": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3f1f939fb1b37804d4ef2f56d38403f77398d95efe0118912a0825867c00feee": {
      "address": "0xAD523115cd35a8d4E60B3C0953E0E0ac10418309",
      "txHash": "0xda281e5a99978bcf4e3ef58a618f8e5fead9649acbe0623723539e44c29f8ffb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "Renovation",
            "label": "renovations",
            "type": "t_mapping(t_uint256,t_struct(RenovationValues)9121_storage)",
            "src": "contracts\\ERC-721\\Renovation.sol:21"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(RenovationValues)9121_storage)": {
            "label": "mapping(uint256 => struct Renovation.RenovationValues)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(RenovationValues)9121_storage": {
            "label": "struct Renovation.RenovationValues",
            "members": [
              {
                "label": "renovationType",
                "type": "t_uint256"
              },
              {
                "label": "intValue",
                "type": "t_uint256"
              },
              {
                "label": "strValue",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "7409c026115169ed64ebfa5b51275d0a71519abcb157b801cd3385ea7ebd13f8": {
      "address": "0xE8addD62feD354203d079926a8e563BC1A7FE81e",
      "txHash": "0x3c25b15794ab3fe04be857239f4f56bbee32ef9aafa12095ebec04ea0d51acac",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10548",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "fermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "experiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10548": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c5000faadf1f6a98f1fe8bdb9658cc9e064e9f555a6541b91a4509b81c3738eb": {
      "address": "0xFE5f411481565fbF70D8D33D992C78196E014b90",
      "txHash": "0x372b5361cf589f90bd0bda5a52ff45650867f48ee49c78ef5a6d8b3c5018527e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "Renovation",
            "label": "renovations",
            "type": "t_mapping(t_uint256,t_struct(RenovationValues)9121_storage)",
            "src": "contracts\\ERC-721\\Renovation.sol:21"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(RenovationValues)9121_storage)": {
            "label": "mapping(uint256 => struct Renovation.RenovationValues)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(RenovationValues)9121_storage": {
            "label": "struct Renovation.RenovationValues",
            "members": [
              {
                "label": "renovationType",
                "type": "t_uint256"
              },
              {
                "label": "intValue",
                "type": "t_uint256"
              },
              {
                "label": "strValue",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "da3df1c3fb76c0801d2d6fc81f79ce6ee7334f14e51b6de6bb2d2cd44cb1cd8b": {
      "address": "0x942ED2fa862887Dc698682cc6a86355324F0f01e",
      "txHash": "0xf61848cc1de6fc3bc8306e27aeb65ac2d150ef0881b01261b47439c4dc4b5c81",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10564",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "fermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "experiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10564": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "98fe80085d97ade5b8ec10d668577d0c749c38a3a0f2ce300bdf81b9cd6b57fc": {
      "address": "0xcC4c41415fc68B2fBf70102742A83cDe435e0Ca7",
      "txHash": "0x89e597b328459d15cbcf86d4784cb0d94c35e25972f69c05a045df3b47c5f117",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10576",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "fermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "experiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10576": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f51ecc7977e68bd498f5a742d5ed5f9c8ff308915efb1b68aef5fe0fb1cd1b9f": {
      "address": "0x8e264821AFa98DD104eEcfcfa7FD9f8D8B320adA",
      "txHash": "0x9584ed87f0a4ff76c766a27393db10525fb617def333403231232f27e9f1d490",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:34"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10574",
            "src": "contracts\\ERC-721\\Brewery.sol:37"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:40"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:43"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:59"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:63"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:68"
          },
          {
            "contract": "Brewery",
            "label": "fermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:71"
          },
          {
            "contract": "Brewery",
            "label": "experiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:74"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:77"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:80"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:83"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10574": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7693_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7693_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b5d69ea6d77d74e0f53e8f84d33f255d50ec1bb33f6d4a4cbc8e599b55144baf": {
      "address": "0x71a0b8A2245A9770A4D887cE1E4eCc6C1d4FF28c",
      "txHash": "0x285f1f4e4e21944e3718885e2f621fead78592bd603346e393848376b9ddc483",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "TavernSettings",
            "label": "xmead",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:16"
          },
          {
            "contract": "TavernSettings",
            "label": "mead",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:19"
          },
          {
            "contract": "TavernSettings",
            "label": "usdc",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:22"
          },
          {
            "contract": "TavernSettings",
            "label": "redeemer",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:25"
          },
          {
            "contract": "TavernSettings",
            "label": "classManager",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:28"
          },
          {
            "contract": "TavernSettings",
            "label": "dexRouter",
            "type": "t_contract(IJoeRouter02)5120",
            "src": "contracts\\TavernSettings.sol:31"
          },
          {
            "contract": "TavernSettings",
            "label": "liquidityPair",
            "type": "t_contract(IJoePair)4724",
            "src": "contracts\\TavernSettings.sol:34"
          },
          {
            "contract": "TavernSettings",
            "label": "tavernsKeep",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:37"
          },
          {
            "contract": "TavernSettings",
            "label": "rewardsPool",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:40"
          },
          {
            "contract": "TavernSettings",
            "label": "treasuryFee",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:43"
          },
          {
            "contract": "TavernSettings",
            "label": "rewardPoolFee",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:46"
          },
          {
            "contract": "TavernSettings",
            "label": "txLimit",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:49"
          },
          {
            "contract": "TavernSettings",
            "label": "walletLimit",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:52"
          },
          {
            "contract": "TavernSettings",
            "label": "breweryCost",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:55"
          },
          {
            "contract": "TavernSettings",
            "label": "xMeadCost",
            "type": "t_uint256",
            "src": "contracts\\TavernSettings.sol:58"
          },
          {
            "contract": "TavernSettings",
            "label": "renovationAddress",
            "type": "t_address",
            "src": "contracts\\TavernSettings.sol:61"
          },
          {
            "contract": "TavernSettings",
            "label": "classTaxes",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\TavernSettings.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IJoeRouter02)5120": {
            "label": "contract IJoeRouter02"
          },
          "t_contract(IJoePair)4724": {
            "label": "contract IJoePair"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "92d56e648211f805279bc58f32864d3158b5852705c7da398215b5af0fbd355c": {
      "address": "0x7C8BaafA542c57fF9B2B90612bf8aB9E86e22C09",
      "txHash": "0x3b248d843af554b1d4bf37c259ca2f61b150660fcb567c888011488623c21319",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "Brewery",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:30"
          },
          {
            "contract": "Brewery",
            "label": "tokenURIs",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))",
            "src": "contracts\\ERC-721\\Brewery.sol:32"
          },
          {
            "contract": "Brewery",
            "label": "settings",
            "type": "t_contract(TavernSettings)10487",
            "src": "contracts\\ERC-721\\Brewery.sol:35"
          },
          {
            "contract": "Brewery",
            "label": "tradingEnabled",
            "type": "t_bool",
            "src": "contracts\\ERC-721\\Brewery.sol:38"
          },
          {
            "contract": "Brewery",
            "label": "startTime",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:41"
          },
          {
            "contract": "Brewery",
            "label": "breweryStats",
            "type": "t_mapping(t_uint256,t_struct(BreweryStats)7692_storage)",
            "src": "contracts\\ERC-721\\Brewery.sol:57"
          },
          {
            "contract": "Brewery",
            "label": "tiers",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:61"
          },
          {
            "contract": "Brewery",
            "label": "yields",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts\\ERC-721\\Brewery.sol:66"
          },
          {
            "contract": "Brewery",
            "label": "fermentationPeriod",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:69"
          },
          {
            "contract": "Brewery",
            "label": "experiencePerSecond",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:72"
          },
          {
            "contract": "Brewery",
            "label": "globalProductionRateMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:75"
          },
          {
            "contract": "Brewery",
            "label": "globalFermentationPeriodMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:78"
          },
          {
            "contract": "Brewery",
            "label": "globalExperienceMultiplier",
            "type": "t_uint256",
            "src": "contracts\\ERC-721\\Brewery.sol:81"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_string_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => string))"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_contract(TavernSettings)10487": {
            "label": "contract TavernSettings"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(BreweryStats)7692_storage)": {
            "label": "mapping(uint256 => struct Brewery.BreweryStats)"
          },
          "t_struct(BreweryStats)7692_storage": {
            "label": "struct Brewery.BreweryStats",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "type_",
                "type": "t_uint256"
              },
              {
                "label": "tier",
                "type": "t_uint256"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "xp",
                "type": "t_uint256"
              },
              {
                "label": "productionRatePerSecondMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "fermentationPeriodMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "experienceMultiplier",
                "type": "t_uint256"
              },
              {
                "label": "totalYield",
                "type": "t_uint256"
              },
              {
                "label": "lastTimeClaimed",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
